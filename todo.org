#+title: Todo list and overview structure of the wikispider project
#+author: Richard Neilsen
#+STARTUP: indent

* Structure overview
** Spider
   A spider that finds pages in wsindex.sqlite, firstly from the 
   Open_Links table, and then from Pages, with the earliest added or 
   crawled date, then downloads them, and does the following:
   1. Enters their pageid, raw_text, and crawled date into the Pages table
   2. Find all unresolved links pointing to the same title in Open_Links,
      and add those entries to Links
   2. Cycles through their 'links' list, and for each entry:
      if that title is already in Pages, add an entry to the Links table
      if that title isn't in Pages, add an entry to the To_Crawl table
   TODO: If a page, when downloaded, is a redirect, the page should be renamed
** Indexer
   A program that takes the raw_text of pages in the *Pages* table, enters all
   of their words into the Words table (if not already present), and enters a
   reference to them to the Mentions table
** Pagerank
   A program that processes the link structure and assigns pages in the *index* a
   pagerank
** Search
   A program that is given a word and returns a list of pageranked pages containing
   that word
*** Extensions
    - search on multiple words
    - return context snippets
    - search on phrases
** Initialise
   A program that wipes the database and resets them (mainly for testing purposes)
** Vacuum
   A simple program that initiates a vacuum operation

* Database schema
   CREATE TABLE Open_Links
   (  title       TEXT NOT NULL,
      added       INTEGER,
      from_id     INTEGER,
      checkout_id INTEGER,
      checked_out INTEGER,
      PRIMARY KEY (title, from_id) );
   CREATE TABLE Pages
   (  pageid      INTEGER NOT NULL PRIMARY KEY UNIQUE,
      title       TEXT NOT NULL UNIQUE,
      raw_text    TEXT,
      zip_text    BLOB,
      crawled     INTEGER );
   CREATE TABLE Links
   (  from_id     INTEGER,
      to_id       INTEGER,
      PRIMARY KEY (from_id, to_id) );
   CREATE TABLE Words
   (  id          INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
      word        TEXT UNIQUE);
   CREATE TABLE Mentions
   (  word_id     INTEGER NOT NULL,
      pageid     INTEGER NOT NULL );
      
   PRAGMA journal_mode=WAL;
